name: publish

on: push

jobs:
  publish-image:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        run: |
          export BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          echo "##[set-output name=branch;]$BRANCH_NAME"
          if [ $BRANCH_NAME = "main" ] || [ $BRANCH_NAME = "master" ]
            then echo "##[set-output name=tag;]latest"
            else echo "##[set-output name=tag;]$BRANCH_NAME"
          fi
        id: extract_branch
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}
      - name: Install sccache (ubuntu-latest)
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
        run: |
          export SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Setup cargo cache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Setup sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: "/home/runner/.cache/sccache"
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-
      - name: Start sccache server
        run: sccache --start-server
      - name: build targets
        run: |
          export RUSTC_WRAPPER="$HOME/.local/bin/sccache"
          cargo build --release
      - name: Print sccache stats
        run: sccache --show-stats
      - name: Stop sccache server
        run: sccache --stop-server || true
      - name: Build Docker images
        run: |
          echo ${{secrets.GITHUB_TOKEN}} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker build -f Dockerfile --tag ghcr.io/${{ github.actor }}/t2t_bot:${{ steps.extract_branch.outputs.tag }} .
